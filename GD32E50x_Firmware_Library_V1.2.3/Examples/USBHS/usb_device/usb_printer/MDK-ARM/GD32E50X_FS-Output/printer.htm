<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\GD32E50X_FS-Output\printer.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\GD32E50X_FS-Output\printer.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Tue Feb 14 20:22:31 2023
<BR><P>
<H3>Maximum Stack Usage =        264 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; usbd_init &rArr; usb_basic_init
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[21]">ADC0_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">ADC0_1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[21]">ADC0_1_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[3e]">ADC2_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[9]">BusFault_Handler</a> from gd32e50x_it.o(.text.BusFault_Handler) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[25]">CAN0_EWMC_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[24]">CAN0_RX1_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[4e]">CAN1_EWMC_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[4c]">CAN1_RX0_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[4d]">CAN1_RX1_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[4b]">CAN1_TX_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[1a]">DMA0_Channel0_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[1b]">DMA0_Channel1_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[1c]">DMA0_Channel2_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[1d]">DMA0_Channel3_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[1e]">DMA0_Channel4_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[1f]">DMA0_Channel5_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[20]">DMA0_Channel6_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[47]">DMA1_Channel0_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[48]">DMA1_Channel1_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[49]">DMA1_Channel2_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[4a]">DMA1_Channel3_4_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[c]">DebugMon_Handler</a> from gd32e50x_it.o(.text.DebugMon_Handler) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[3f]">EXMC_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[15]">EXTI0_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[37]">EXTI10_15_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[16]">EXTI1_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[17]">EXTI2_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[18]">EXTI3_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[19]">EXTI4_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[26]">EXTI5_9_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[13]">FMC_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from gd32e50x_it.o(.text.HardFault_Handler) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[2f]">I2C0_ER_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[2e]">I2C0_EV_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[31]">I2C1_ER_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[30]">I2C1_EV_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[57]">I2C2_ER_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[56]">I2C2_EV_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[59]">I2C2_WKUP_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[10]">LVD_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[8]">MemManage_Handler</a> from gd32e50x_it.o(.text.MemManage_Handler) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from gd32e50x_it.o(.text.NMI_Handler) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[d]">PendSV_Handler</a> from gd32e50x_it.o(.text.PendSV_Handler) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[14]">RCU_CTC_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[38]">RTC_Alarm_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[12]">RTC_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[40]">SDIO_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[54]">SHRTIMER_IRQ0_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[55]">SHRTIMER_IRQ1_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[4f]">SHRTIMER_IRQ2_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[50]">SHRTIMER_IRQ3_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[51]">SHRTIMER_IRQ4_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[52]">SHRTIMER_IRQ5_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[53]">SHRTIMER_IRQ6_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[32]">SPI0_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[33]">SPI1_I2S1ADD_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[42]">SPI2_I2S2ADD_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[b]">SVC_Handler</a> from gd32e50x_it.o(.text.SVC_Handler) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[e]">SysTick_Handler</a> from gd32e50x_it.o(.text.SysTick_Handler) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[5c]">SystemInit</a> from system_gd32e50x.o(.text.SystemInit) referenced from startup_gd32e50x_hd.o(.text)
 <LI><a href="#[11]">TAMPER_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[27]">TIMER0_BRK_TIMER8_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[2a]">TIMER0_Channel_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[29]">TIMER0_TRG_CMT_TIMER10_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[28]">TIMER0_UP_TIMER9_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[2b]">TIMER1_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[2c]">TIMER2_IRQHandler</a> from gd32e50x_it.o(.text.TIMER2_IRQHandler) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[2d]">TIMER3_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[41]">TIMER4_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[45]">TIMER5_DAC_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[46]">TIMER6_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[3a]">TIMER7_BRK_TIMER11_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[3d]">TIMER7_Channel_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[3c]">TIMER7_TRG_CMT_TIMER13_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[3b]">TIMER7_UP_TIMER12_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[43]">UART3_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[44]">UART4_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[34]">USART0_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[35]">USART1_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[36]">USART2_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[58]">USART5_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[5a]">USART5_WKUP_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[22]">USBD_HP_CAN0_TX_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[23]">USBD_LP_CAN0_RX0_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[39]">USBD_WKUP_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[a]">UsageFault_Handler</a> from gd32e50x_it.o(.text.UsageFault_Handler) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[f]">WWDGT_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[5d]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_gd32e50x_hd.o(.text)
 <LI><a href="#[5b]">main</a> from app.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[1]">printer_deinit</a> from printer_core.o(.text.printer_deinit) referenced 2 times from printer_core.o(.data.usbd_printer_cb)
 <LI><a href="#[3]">printer_in</a> from printer_core.o(.text.printer_in) referenced 2 times from printer_core.o(.data.usbd_printer_cb)
 <LI><a href="#[0]">printer_init</a> from printer_core.o(.text.printer_init) referenced 2 times from printer_core.o(.data.usbd_printer_cb)
 <LI><a href="#[4]">printer_out</a> from printer_core.o(.text.printer_out) referenced 2 times from printer_core.o(.data.usbd_printer_cb)
 <LI><a href="#[2]">printer_req</a> from printer_core.o(.text.printer_req) referenced 2 times from printer_core.o(.data.usbd_printer_cb)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5d]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(.text)
</UL>
<P><STRONG><a name="[97]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[5e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[63]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[98]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[99]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[9a]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[9b]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[9c]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>ADC0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>ADC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>CAN0_EWMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>CAN0_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>CAN1_EWMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA0_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA0_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA0_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA0_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA0_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DMA0_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA0_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA1_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>DMA1_Channel3_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>EXMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>EXTI10_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>EXTI5_9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>I2C0_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C0_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>I2C2_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>RCU_CTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>SHRTIMER_IRQ0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>SHRTIMER_IRQ1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>SHRTIMER_IRQ2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>SHRTIMER_IRQ3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>SHRTIMER_IRQ4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>SHRTIMER_IRQ5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>SHRTIMER_IRQ6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>SPI1_I2S1ADD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>SPI2_I2S2ADD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIMER0_BRK_TIMER8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIMER0_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIMER0_TRG_CMT_TIMER10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIMER0_UP_TIMER9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIMER4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TIMER5_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>TIMER6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIMER7_BRK_TIMER11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIMER7_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIMER7_TRG_CMT_TIMER13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIMER7_UP_TIMER12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>USART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>USART5_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USBD_HP_CAN0_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>USBD_LP_CAN0_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>USBD_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>WWDGT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[9d]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[7e]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_basic_init
</UL>

<P><STRONG><a name="[9e]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[9f]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[a0]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[7d]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_basic_init
</UL>

<P><STRONG><a name="[a1]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[5f]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[a2]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[a4]"></a>__decompress0</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[9]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32e50x_it.o(.text.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e50x_it.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32e50x_it.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32e50x_it.o(.text.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e50x_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e50x_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e50x_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e50x_it.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>SystemInit</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, system_gd32e50x.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SystemInit &rArr; system_clock_config &rArr; system_clock_168m_hxtal
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_vector_table_set
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(.text)
</UL>
<P><STRONG><a name="[2c]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, gd32e50x_it.o(.text.TIMER2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIMER2_IRQHandler &rArr; usb_timer_irq &rArr; timer_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_timer_irq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32e50x_it.o(.text.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>exti_init</STRONG> (Thumb, 266 bytes, Stack size 16 bytes, gd32e50x_exti.o(.text.exti_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = exti_init
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_intr_config
</UL>

<P><STRONG><a name="[8c]"></a>exti_interrupt_enable</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, gd32e50x_exti.o(.text.exti_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = exti_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_intr_config
</UL>

<P><STRONG><a name="[8a]"></a>exti_interrupt_flag_clear</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, gd32e50x_exti.o(.text.exti_interrupt_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = exti_interrupt_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_intr_config
</UL>

<P><STRONG><a name="[7a]"></a>int_to_unicode</STRONG> (Thumb, 118 bytes, Stack size 12 bytes, usbd_enum.o(.text.int_to_unicode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = int_to_unicode
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_string_get
</UL>

<P><STRONG><a name="[5b]"></a>main</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, app.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = main &rArr; usbd_init &rArr; usb_basic_init
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_intr_config
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_timer_init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_rcu_config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[74]"></a>nvic_irq_enable</STRONG> (Thumb, 298 bytes, Stack size 24 bytes, gd32e50x_misc.o(.text.nvic_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = nvic_irq_enable &rArr; nvic_priority_group_set
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_set
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_intr_config
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_timer_init
</UL>

<P><STRONG><a name="[75]"></a>nvic_priority_group_set</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, gd32e50x_misc.o(.text.nvic_priority_group_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = nvic_priority_group_set
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_intr_config
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_timer_init
</UL>

<P><STRONG><a name="[65]"></a>nvic_vector_table_set</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gd32e50x_misc.o(.text.nvic_vector_table_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nvic_vector_table_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[8d]"></a>rcu_clock_freq_get</STRONG> (Thumb, 726 bytes, Stack size 112 bytes, gd32e50x_rcu.o(.text.rcu_clock_freq_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_rcu_config
</UL>

<P><STRONG><a name="[89]"></a>rcu_periph_clock_enable</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, gd32e50x_rcu.o(.text.rcu_periph_clock_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_intr_config
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_timer_init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_rcu_config
</UL>

<P><STRONG><a name="[8e]"></a>rcu_usb_clock_config</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gd32e50x_rcu.o(.text.rcu_usb_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rcu_usb_clock_config
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_rcu_config
</UL>

<P><STRONG><a name="[79]"></a>serial_string_get</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, usbd_enum.o(.text.serial_string_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = serial_string_get &rArr; int_to_unicode
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_unicode
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_init
</UL>

<P><STRONG><a name="[6d]"></a>timer_auto_reload_shadow_enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32e50x_timer.o(.text.timer_auto_reload_shadow_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = timer_auto_reload_shadow_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_time_set
</UL>

<P><STRONG><a name="[69]"></a>timer_disable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32e50x_timer.o(.text.timer_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = timer_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_timer_irq
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_time_set
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_delay
</UL>

<P><STRONG><a name="[6f]"></a>timer_enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32e50x_timer.o(.text.timer_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = timer_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_time_set
</UL>

<P><STRONG><a name="[6b]"></a>timer_init</STRONG> (Thumb, 272 bytes, Stack size 8 bytes, gd32e50x_timer.o(.text.timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_time_set
</UL>

<P><STRONG><a name="[6a]"></a>timer_interrupt_disable</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gd32e50x_timer.o(.text.timer_interrupt_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_time_set
</UL>

<P><STRONG><a name="[6e]"></a>timer_interrupt_enable</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gd32e50x_timer.o(.text.timer_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_time_set
</UL>

<P><STRONG><a name="[6c]"></a>timer_interrupt_flag_clear</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gd32e50x_timer.o(.text.timer_interrupt_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_interrupt_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_timer_irq
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_time_set
</UL>

<P><STRONG><a name="[8f]"></a>timer_interrupt_flag_get</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gd32e50x_timer.o(.text.timer_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_timer_irq
</UL>

<P><STRONG><a name="[7c]"></a>usb_basic_init</STRONG> (Thumb, 306 bytes, Stack size 224 bytes, drv_usb_core.o(.text.usb_basic_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = usb_basic_init
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_init
</UL>

<P><STRONG><a name="[7f]"></a>usb_core_init</STRONG> (Thumb, 334 bytes, Stack size 24 bytes, drv_usb_core.o(.text.usb_core_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = usb_core_init &rArr; usb_core_reset &rArr; usb_udelay &rArr; hw_delay &rArr; hw_time_set &rArr; timer_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_core_reset
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_mdelay
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_init
</UL>

<P><STRONG><a name="[83]"></a>usb_devcore_init</STRONG> (Thumb, 508 bytes, Stack size 16 bytes, drv_usb_dev.o(.text.usb_devcore_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = usb_devcore_init &rArr; usb_rxfifo_flush &rArr; usb_udelay &rArr; hw_delay &rArr; hw_time_set &rArr; timer_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_devint_enable
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_set_rxfifo
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_set_txfifo
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_rxfifo_flush
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_txfifo_flush
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_init
</UL>

<P><STRONG><a name="[88]"></a>usb_devint_enable</STRONG> (Thumb, 120 bytes, Stack size 4 bytes, drv_usb_dev.o(.text.usb_devint_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = usb_devint_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_devcore_init
</UL>

<P><STRONG><a name="[73]"></a>usb_intr_config</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, gd32e50x_hw.o(.text.usb_intr_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = usb_intr_config &rArr; nvic_irq_enable &rArr; nvic_priority_group_set
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_enable
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_clear
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_set
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[81]"></a>usb_mdelay</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, gd32e50x_hw.o(.text.usb_mdelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = usb_mdelay &rArr; hw_delay &rArr; hw_time_set &rArr; timer_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_connect
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_disconnect
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_core_init
</UL>

<P><STRONG><a name="[70]"></a>usb_rcu_config</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, gd32e50x_hw.o(.text.usb_rcu_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = usb_rcu_config &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_usb_clock_config
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_clock_freq_get
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>usb_rxfifo_flush</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, drv_usb_core.o(.text.usb_rxfifo_flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = usb_rxfifo_flush &rArr; usb_udelay &rArr; hw_delay &rArr; hw_time_set &rArr; timer_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_devcore_init
</UL>

<P><STRONG><a name="[85]"></a>usb_set_txfifo</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, drv_usb_core.o(.text.usb_set_txfifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usb_set_txfifo
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_devcore_init
</UL>

<P><STRONG><a name="[71]"></a>usb_timer_init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gd32e50x_hw.o(.text.usb_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = usb_timer_init &rArr; nvic_irq_enable &rArr; nvic_priority_group_set
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_set
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>usb_timer_irq</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, gd32e50x_hw.o(.text.usb_timer_irq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usb_timer_irq &rArr; timer_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_clear
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_get
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
</UL>

<P><STRONG><a name="[96]"></a>usb_transc_active</STRONG> (Thumb, 250 bytes, Stack size 20 bytes, drv_usb_dev.o(.text.usb_transc_active))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = usb_transc_active
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_setup
</UL>

<P><STRONG><a name="[94]"></a>usb_transc_deactivate</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, drv_usb_dev.o(.text.usb_transc_deactivate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usb_transc_deactivate
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_clear
</UL>

<P><STRONG><a name="[95]"></a>usb_transc_outxfer</STRONG> (Thumb, 262 bytes, Stack size 24 bytes, drv_usb_dev.o(.text.usb_transc_outxfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usb_transc_outxfer
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_recev
</UL>

<P><STRONG><a name="[86]"></a>usb_txfifo_flush</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, drv_usb_core.o(.text.usb_txfifo_flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = usb_txfifo_flush &rArr; usb_udelay &rArr; hw_delay &rArr; hw_time_set &rArr; timer_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_devcore_init
</UL>

<P><STRONG><a name="[82]"></a>usb_udelay</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, gd32e50x_hw.o(.text.usb_udelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = usb_udelay &rArr; hw_delay &rArr; hw_time_set &rArr; timer_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_rxfifo_flush
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_txfifo_flush
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_core_reset
</UL>

<P><STRONG><a name="[90]"></a>usbd_connect</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, usbd_core.o(.text.usbd_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = usbd_connect &rArr; usb_mdelay &rArr; hw_delay &rArr; hw_time_set &rArr; timer_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_dev_connect
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_mdelay
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_init
</UL>

<P><STRONG><a name="[92]"></a>usbd_disconnect</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, usbd_core.o(.text.usbd_disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = usbd_disconnect &rArr; usb_mdelay &rArr; hw_delay &rArr; hw_time_set &rArr; timer_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_dev_disconnect
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_mdelay
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_init
</UL>

<P><STRONG><a name="[76]"></a>usbd_ep_clear</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, usbd_core.o(.text.usbd_ep_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = usbd_ep_clear &rArr; usb_transc_deactivate
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_transc_deactivate
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_deinit
</UL>

<P><STRONG><a name="[78]"></a>usbd_ep_recev</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, usbd_core.o(.text.usbd_ep_recev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = usbd_ep_recev &rArr; usb_transc_outxfer
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_transc_outxfer
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_req
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_init
</UL>

<P><STRONG><a name="[77]"></a>usbd_ep_setup</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, usbd_core.o(.text.usbd_ep_setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = usbd_ep_setup &rArr; usb_transc_active
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_transc_active
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_init
</UL>

<P><STRONG><a name="[72]"></a>usbd_init</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, usbd_core.o(.text.usbd_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = usbd_init &rArr; usb_basic_init
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_connect
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_disconnect
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_string_get
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_devcore_init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_core_init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_basic_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a5]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[a6]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[a7]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[67]"></a>hw_delay</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, gd32e50x_hw.o(.text.hw_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hw_delay &rArr; hw_time_set &rArr; timer_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_disable
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_time_set
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_mdelay
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_udelay
</UL>

<P><STRONG><a name="[68]"></a>hw_time_set</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, gd32e50x_hw.o(.text.hw_time_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hw_time_set &rArr; timer_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_enable
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_auto_reload_shadow_enable
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_disable
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_clear
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_delay
</UL>

<P><STRONG><a name="[64]"></a>system_clock_config</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_gd32e50x.o(.text.system_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = system_clock_config &rArr; system_clock_168m_hxtal
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_168m_hxtal
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[7b]"></a>system_clock_168m_hxtal</STRONG> (Thumb, 434 bytes, Stack size 16 bytes, system_gd32e50x.o(.text.system_clock_168m_hxtal))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = system_clock_168m_hxtal
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[80]"></a>usb_core_reset</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, drv_usb_core.o(.text.usb_core_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = usb_core_reset &rArr; usb_udelay &rArr; hw_delay &rArr; hw_time_set &rArr; timer_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_core_init
</UL>

<P><STRONG><a name="[84]"></a>usb_set_rxfifo</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, drv_usb_dev.o(.text.usb_set_rxfifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usb_set_rxfifo
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_devcore_init
</UL>

<P><STRONG><a name="[93]"></a>usb_dev_disconnect</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, usbd_core.o(.text.usb_dev_disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = usb_dev_disconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_disconnect
</UL>

<P><STRONG><a name="[91]"></a>usb_dev_connect</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, usbd_core.o(.text.usb_dev_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = usb_dev_connect
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_connect
</UL>

<P><STRONG><a name="[0]"></a>printer_init</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, printer_core.o(.text.printer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = printer_init &rArr; usbd_ep_recev &rArr; usb_transc_outxfer
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_recev
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_setup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printer_core.o(.data.usbd_printer_cb)
</UL>
<P><STRONG><a name="[1]"></a>printer_deinit</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, printer_core.o(.text.printer_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = printer_deinit &rArr; usbd_ep_clear &rArr; usb_transc_deactivate
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printer_core.o(.data.usbd_printer_cb)
</UL>
<P><STRONG><a name="[2]"></a>printer_req</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, printer_core.o(.text.printer_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = printer_req &rArr; usbd_ep_recev &rArr; usb_transc_outxfer
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_recev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printer_core.o(.data.usbd_printer_cb)
</UL>
<P><STRONG><a name="[3]"></a>printer_in</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, printer_core.o(.text.printer_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = printer_in
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printer_core.o(.data.usbd_printer_cb)
</UL>
<P><STRONG><a name="[4]"></a>printer_out</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, printer_core.o(.text.printer_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = printer_out
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printer_core.o(.data.usbd_printer_cb)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
